#version 330 core
layout (location = 0) in vec3 position;
layout (location = 1) in vec3 color;
layout (location = 2) in vec2 texCoord;

out vec3 ourColor;
out vec2 TexCoord;

void main()
{
	gl_Position = vec4(position, 1.0f);
	ourColor = color;
	//ourColor.x=1;
	//ourColor.y=1
	//ourColor.z=1
	// We swap the y-axis by substracing our coordinates from 1. This is done because most images have the top y-axis inversed with OpenGL's top y-axis.
	// TexCoord = texCoord;
	TexCoord = vec2(texCoord.x, 1.0 - texCoord.y);
}

#version 330 core
in vec3 ourColor;
in vec2 TexCoord;

out vec4 color;

// Texture samplers
uniform sampler2D ourTexture1;
uniform sampler2D ourTexture2;
uniform sampler2D ourTexture3;

void main()
{
        vec3 yuv;  
        vec3 rgb;      
        yuv.x = texture(ourTexture1, TexCoord).r;  
        yuv.y = texture(ourTexture2, TexCoord).r - 0.5;  
        yuv.z = texture(ourTexture3, TexCoord).r - 0.5;  
        rgb = mat3( 1,       1,         1,  
                    0,       -0.39465,  2.03211,  
                    1.13983, -0.58060,  0) * yuv;      
        color = vec4(rgb, 1);  
}
